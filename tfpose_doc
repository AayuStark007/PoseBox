
*/
  Openpose implemented via tensorflow, contains instructions to put up a tensorflow implemetation of openpose library. 
  For specifications refer to openpose_doc.
 */

Requirements:
  - python3
  - tensorflow 1.4.1+
  - opencv, python3-tk, protobuf
  
Installation:
$ git clone https://www.github.com/ildoonet/tf-openpose
$ cd tf-openpose
$ pip3 install -r requirements.txt

Important: To detect the 2D pose of multiple people in an image, a nonparametric representation referred to as Part Affinity Fields 
     (PAFs) is used. Post-processing for Part-Affinity Fields Map is implemented in C++ & Swig and is needed for PAF generation 
     during detection.
     i.e.
     - install swig
     - $swig -python -c++ pafprocess.i && python3 setup.py build_ext --inplace
     
     
Running an example:

Execute from ./tf-openpose/src/ 

$ python3 run.py --model=mobilenet_thin --resize=432x368 --image=<path_to_image>/<name_of_image>
substitute --model=<model_of _your_choice>

Notes:

- solution reproduced in a python virtual environment ; pip breaks in ubuntu 16 on upgrading pip which is necessary for 
  some dependancies.
  
  Failure cases:
     - part detections shared by two persons
     - crossed legs, particularly when obscured
     - crossed arms
     - occasional false positive on human statues
     - limbs obscured by other limbs
     - false/incorrect detections caused by missing limbs
     - occasional connection associating parts from two persons, usually a consequence of proximity
     
  
  Pose related functions of tf-Openpose library:
  
  -Openpose estimates poses via the following things:
  -The "PoseEstimator" class, which contains the function estimate_paf(), that is responsible for 2d pose detection of people in                  an image by generating a particle affinity field by sequesntially generating pafs
   for every human in the scene present which is figured out the class 'human', whose objects are the subjects of the 
   PoseEstimator class.
  
  -The "TfposeEstimator" class, which uses the tensoflow api to perform
  

